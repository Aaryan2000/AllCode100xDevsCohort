//Express helps to create Http server

const express=require("express");

const port=3000
const app=express();//express is a funcn and app is object
const bodyParser=require("body-parser");

//imp

// const bodyParser=require("body-parser");
// app.use(bodyParser.json());
//express.json() method was introduced as part of the Express core. This method does the same thing as bodyParser.json(), i.e., it parses incoming JSON payloads and makes the parsed data available on the req.body object.
// Using express.json() eliminates the need to separately install and import the body-parser middleware for handling JSON.
//Recommended to use app.use(express.json())


//Ex=1

// app.get('/',function(req,res){
//     res.send("Hello Aaryan!")
// })

//Ex=2
// app.get('/',function(req,res){
//     res.send('<b>Hi There</b>')
// })

//Ex=3
// app.get("/route-handler",function(req,res){

//     // here comes headers,body,query Parameters
//     // do ML Model

//     res.json({
//         name:"Aaryan",
//         age:21
//     })
// })



//Ex=4
// app.use(bodyParser.json());

// app.post('/conversations',(req,res)=>{
//     console.log(req.headers["authorization"]);
//     console.log(req.body);
//     res.send({
//         msg:"2+2=4"
//     })
// })




// app.use(bodyParser.json());

//Ex=5
app.post('/backend-api/conversation',function(req,res){
    console.log(req.query.message);//query parameter:For seeing the o/p you have to pass query in route.eg=http://localhost:3000/backend-api/conversation?message="Hi&a=2
    console.log(req.query.a);//query parameter

    res.json({
        output:"2+2:4"
    })
})

app.listen(port,function(){
    console.log(`Example app Listening on port ${port}`);
})